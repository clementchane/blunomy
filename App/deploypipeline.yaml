trigger:
- main

pr: none

parameters:
- name: deploy_to_env
  type: boolean
  default: true

variables:
  dockerRegistryServiceConnection: 'testregistry'
  imageRepository: 'pyapp'
  containerRegistry: 'testregistry'
  tags: '0.1'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build job
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: 'pyapp'
        path: 'pyapp'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: and(succeeded(), eq('${{ parameters.deploy_to_env }}', 'true'))
  jobs:
  - job: Deploy
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifactName: 'manifests'
        downloadPath: '$(System.ArtifactsDirectory)/manifests'
    - task: KubernetesManifest@0
      displayName: Deploy to Kubernetes cluster
      inputs:
        action: deploy
        namespace: $(k8sNamespace)
        manifests: |
          $(System.ArtifactsDirectory)/manifests/deployment.yml
        imagePullSecrets: |
          $(imagePullSecret)
        containers: |
          $(containerRegistry)/$(imageRepository):$(tag)
    
    

